<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper의 namespace속성은 연결할 mapper의 interface 풀 경로로 작성 -->
<mapper namespace="com.ikik.mapper.BoardMapper">

	<!-- id는 인터페이스가 가지고 있는 메서드 이름입니다. -->
	<!-- resultType 결과가 가진 타입을 적어주어야 하는데 패키지를 포함한 풀 경로를 적어주어야합니다. -->
	<!-- Tag안에는 조회문장 적어주시면 됩니다. 세미클론 제외하고 -->
	
	<!--
	 ●select 태그 작성
		id				: mapper의 메서드명
		resultType		: 기본타입
						, 객체타입 (select쿼리의 결과를 특정 클래스의 객체로 저장)
						쿼리 실행 결과를 resultType의 속성에 저장
						
		CDATA			: 파서가 마크업이 아닌 문자로만 해석 할 수 있도록 처리
							XML에서 부등호를 사용하기 위해 사용
							태그가 안에 있으면 작동을 안해요 
	 -->
	<select id="getListXml" resultType="com.ikik.vo.BoardVO">
	<![CDATA[
	select * 
		from(
			select t.*, rownum rn
				from (
					select * 
					from tbl_board 
					where bno>0 
	]]>
					<include refid="criteria"></include>
					order by bno desc
					) t
				)
		where rn between ${startNo} and ${endNo}
	</select>
	
	<!-- 예전엔 input도 세팅해줘야했었는데 지금은 자동으로 처리가 다 됩니다. -->
	<!-- 동적 쿼리 작성
		mybatis는 내부적으로 preparedStatement를 활용합니다.
		? -> #{속성}
		쿼리작성 시 필요한 정보는 메서드의 매개변수를 통해 받아 올 수 있습니다. -->
	<!-- values의 값들은 파라메터에서 받아와서 처리 하는겁니다. -->
	<!-- EL은 $로 도 되지만 #으로 사용해야합니다. 의미가 다릅니다. -->
	<!-- 동적인 쿼리 -->
	<insert id="insert">
		insert into tbl_board (bno, title, content, writer) 
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>
	
	<insert id="insertSelectKey">
		<!-- selectKey
			생성된 시퀀스값을 VO객체의 속성에 저장 후 사용합니다.
		 -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
		<!-- 시퀀스 조회 할때는 dual 테이블 조회 합니다. -->
			select seq_board.nextval from dual
		</selectKey>
		
		insert into tbl_board (bno, title, content, writer) 
		values (#{bno}, #{title}, #{content}, #{writer})
	</insert>
	
	<select id="getOne" resultType="com.ikik.vo.BoardVO">
		select * from  tbl_board where bno = #{bno}
	</select>
	
	<delete id="delete">
		delete tbl_board where bno=#{bno}
	</delete>
	
	<update id="update">
		update tbl_board set title = #{title}, content = #{content}, writer=#{writer}
									, updateDate = sysdate where bno = #{bno}
	</update>
	
	<select id="getTotalCnt" resultType="int">
		select count(*) 
		from tbl_board
		<!-- 1=1 true니까 검색 조건을 맞춰주는 -->
		where 1=1
		<include refid="criteria"></include>
	</select>
	
	<!-- 
		●반복되는 쿼리를 미리 작성해 놓고 재활용 합니다
			반복할 쿼리 선언 : <sql id="">
			선언한 쿼리 사용 : <include refId="">
			변수 사용 방법 <property name="">
			
			refId = reference id
	-->
	<sql id="criteria">
		<choose>
			<when test="searchField == 'title'">
				and title like '%'||#{searchWord}||'%'
			</when>
			<when test="searchField == 'content'">
				and content like '%'||#{searchWord}||'%'
			</when>
			<when test="searchField == 'writer'">
				and writer like '%'||#{searchWord}||'%'
			</when>
		</choose>
	</sql>
	
</mapper>